Для удобства пронумеруем известные нам данные:

L, последний столбец таблицы сдвигов
I, номер строки s в таблице сдвигов
Частота, с которой символ Li встречается в подстроке l0,…,li−1
Для каждого уникального символа количество лексикографически меньших символов в L
Символ sn−1 находится в строке L под номером I, так как в таблице строка s0 имела номер I. Найдём символ sn−2.

Символ sn−2 имеет в строке L тот же номер, что строка sn−1 имела в таблице сдвигов: строка sn−1 начинается с символа sn−1, sn−2 находится на 1 левее его и из-за циклического сдвига оказывается в последнем столбце. Нам известен символ sn−1. Посчитаем, на каком месте в таблице будет стоять строка, начинающаяся с этого символа.

Из 4 известно количество символов, меньших sn−1. Все строки, начинающиеся с этих символов, стоят в таблице раньше sn−1. Кроме того, в таблице есть строки, начинающиеся с того же символа, что и sn−1. Из 3 известно, сколько их: если символ, равный sn−1, встречался в L раньше, чем sn−1, то в таблице строка, начинающаяся с этого символа, тоже стоит раньше строки, начинающейся с sn−1, так как префикс строки, оканчивающейся на этот символ, меньше префикса строки, оканчивающейся на sn−1.

Тогда сумма этих двух величин является номером символа sn−2 в строке L. Зная sn−1 и sn−2, аналогично найдём sn−3…s0.

Предподсчёт занимает O(n) времени, восстановление каждого из n символов занимает O(1) времени. Суммарное время работы алгоритма O(n).

Пример работы для BWT(s)=("BCABAAA", 2) (нумерация с 0):